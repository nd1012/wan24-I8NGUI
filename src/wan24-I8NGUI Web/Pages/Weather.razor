@page "/weather"
@inject HttpClient Http

<FluentLabel Typo="Typography.H1">Weather</FluentLabel>

<FluentLabel Typo="Typography.Body">This component demonstrates fetching data from the server.</FluentLabel>

@if (forecasts == null)
{
    <FluentLabel Typo="Typography.Body"><em>Loading...</em></FluentLabel>
}
else
{
    <FluentDataGrid Class="w-100" Items="@forecasts.AsQueryable()">
        <PropertyColumn Property="@(f => f.Date.ToLongDateString())" Title="@_("Date")" />
        <PropertyColumn Property="@(f => f.TemperatureC)" />
        <PropertyColumn Property="@(f => f.TemperatureF)" />
        <PropertyColumn Property="@(f => f.Summary)" />
    </FluentDataGrid>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
